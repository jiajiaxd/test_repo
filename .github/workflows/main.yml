name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 5.0.1)'
        required: true
      changelog:
        description: 'Changelog text'
        required: true
      level:
        description: 'Release level'
        default: 'stable'
        required: true
        type: choice
        options:
          - stable
          - beta
          - alpha
      significance:
        description: 'Significance level'
        default: 'normal'
        required: true
        type: choice
        options:
          - minor
          - normal
          - important
          - critical

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ github.event.inputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Update files
        run: |
          # 处理换行符转义
          CHANGELOG_ESCAPED=$(echo "${{ github.event.inputs.changelog }}" | python -c 'import sys,json; print(json.dumps(sys.stdin.read()).strip("\""))')
          python scripts/update_files.py \
            --version "${{ github.event.inputs.version }}" \
            --changelog "$CHANGELOG_ESCAPED" \
            --level "${{ github.event.inputs.level }}" \
            --significance "${{ github.event.inputs.significance }}"

      - name: Upload modified files
        uses: actions/upload-artifact@v3
        with:
          name: config-files
          path: |
            utils/static.py
            public.json

  build:
    needs: prepare
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Download config files
        uses: actions/download-artifact@v3
        with:
          name: config-files
          path: .

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Build binary
        run: |
          pip install pyinstaller -r requirements.txt
          pyinstaller -F Steamauto.py --name Steamauto-${{ matrix.os }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.os }}
          path: dist/

  publish:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
          name: |
            binaries-windows-latest
            binaries-ubuntu-latest

      - name: Prepare release files
        run: |
          mkdir -p release_files
          find ./artifacts -type f -exec mv {} release_files/ \;

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.changelog }}
          artifacts: release_files/*
          token: ${{ secrets.GITHUB_TOKEN }}

  finalize:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download config files
        uses: actions/download-artifact@v3
        with:
          name: config-files
          path: .

      - name: Update metadata
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/update_metadata.py \
            --version "${{ github.event.inputs.version }}" \
            --repo "${{ github.repository }}"

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          add: utils/static.py public.json
          message: |
            ${{ github.event.inputs.changelog }}
          default_author: github_actions