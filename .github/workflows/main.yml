name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (requires changelog, level, significance)'
        required: false
      changelog:
        description: 'Changelog for the version'
        required: false
      level:
        description: 'Release level (critical/important/normal)'
        required: false
      significance:
        description: 'Release significance (major/minor/patch)'
        required: false
      broadcast:
        description: 'Broadcast message (optional)'
        required: false

jobs:
  validate_and_prepare:
    name: Validate Input & Prepare Files
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.generate_commit_msg.outputs.message }}
    steps:
      - uses: actions/checkout@v4

      # 输入参数验证
      - name: Validate inputs
        run: |
          if [ -n "${{ inputs.version }}" ]; then
              [ -z "${{ inputs.changelog }}" ] && echo "Missing changelog" && exit 1
              [ -z "${{ inputs.level }}" ] && echo "Missing level" && exit 1
              [ -z "${{ inputs.significance }}" ] && echo "Missing significance" && exit 1
          else
              [ -n "${{ inputs.changelog }}" ] && echo "Changelog requires version" && exit 1
              [ -n "${{ inputs.level }}" ] && echo "Level requires version" && exit 1
              [ -n "${{ inputs.significance }}" ] && echo "Significance requires version" && exit 1
          fi

      # 修改文件版本和公告信息
      - name: Modify files
        run: |
          python .github/scripts/modify_files.py \
            --version "${{ inputs.version }}" \
            --changelog "${{ inputs.changelog }}" \
            --level "${{ inputs.level }}" \
            --significance "${{ inputs.significance }}" \
            --broadcast "${{ inputs.broadcast }}"

      # 生成提交信息
      - name: Generate commit message
        id: generate_commit_msg
        run: |
          msg=""
          if [ -n "${{ inputs.version }}" ]; then
              msg+="Version ${{ inputs.version }}: ${{ inputs.changelog }}"
          fi
          if [ -n "${{ inputs.broadcast }}" ]; then
              [ -n "$msg" ] && msg+="\n"
              msg+="Broadcast: ${{ inputs.broadcast }}"
          fi
          echo "message=$msg" >> $GITHUB_OUTPUT

      # 保存修改后的代码
      - uses: actions/upload-artifact@v3
        with:
          name: modified-source
          path: .

  build:
    name: Build Executables
    needs: validate_and_prepare
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: modified-source
          path: .

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Build executable
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
          python utils/add_build_info.py
          pyinstaller -F Steamauto.py \
            --collect-all apprise \
            --name Steamauto-${{ matrix.os }} \
            --add-data "plugins:plugins"

      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: dist/

  publish:
    name: Publish Release
    needs: [validate_and_prepare, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 获取修改后的源代码
      - uses: actions/download-artifact@v3
        with:
          name: modified-source
          path: .

      # 下载构建产物
      - name: Download build artifacts
        run: |
          mkdir -p releases
          for os in windows-latest ubuntu-latest; do
            actions/download-artifact@v3
              name: build-$os
              path: releases/$os
          done

      # 发布到GitHub Releases
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.version || 'v0.0.0' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: releases/*
          body: |
            **Changelog**: ${{ inputs.changelog }}
            **Level**: ${{ inputs.level }}
            **Significance**: ${{ inputs.significance }}

      # 更新下载信息和哈希值
      - name: Update download info
        env:
          VERSION: ${{ inputs.version }}
        run: |
          python .github/scripts/update_download_info.py

      # 提交最终修改
      - name: Commit changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          default_author: github_actions
          add: utils/static.py public.json
          message: ${{ needs.validate_and_prepare.outputs.commit_message }}